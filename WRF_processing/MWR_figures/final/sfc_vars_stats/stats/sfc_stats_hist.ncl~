;***************************************
; PROGRAM DESCRIPTION: This NCL script plots LHFlx surface variables 
; INPUT DATA: Text file with surface data from excel for all days 
;             for each model resolution
; OUTPUT DATA: Panel plots of the variable along surface paths
; Note: preprocessing of data is necessary from 'wrf_sfc_line*txt.ncl' AND 
;       microsoft excel saved as tab delimited file of all text files
;       This script plots only surface data from 2 and 5 March
; CREATOR: Alice DuVivier - July 2011
;***************************************
load "$NCARG_ROOT/lib/ncarg/nclscripts/csm/gsn_code.ncl"
load "$NCARG_ROOT/lib/ncarg/nclscripts/csm/gsn_csm.ncl"
load "$NCARG_ROOT/lib/ncarg/nclscripts/csm/contributed.ncl"
load "$NCARG_ROOT/lib/ncarg/nclscripts/csm/shea_util.ncl"
;***************************************
begin
; MANUAL INPUTS
indir = "./txt_files/"
en_num = 4

fname0 = indir + "wrf_100km_sfc_all.txt"
fname1 = indir + "wrf_50km_sfc_all.txt"
fname2 = indir + "wrf_25km_sfc_all.txt"
fname3 = indir + "wrf_10km_sfc_all.txt"
fname4 = indir + "GFDex_sfc_all.txt"

title0 = "WRF 100" 
title1 = "WRF 50" 
title2 = "WRF 25"
title3 = "WRF 10"
title4 = "GFDex"

; BEGIN SCRIPT
; set outdir and fout names
outdir = "./"
fout = outdir + "sfc_rmse"

print("Plotting stats for GFDex days")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  
; Load data - must be txt files
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

 ncol = 11               ; number of columns in array
 nrow = 129             ; number of rows in array (the header is removed already)
 header = 1             ; number of header lines

;; load data from ascii files
;; at the same time put the data into arrays by variable
;;;;;;;;;;;;;
; load data 
;;;;;;;;;;;;;
data1    = asciiread(fname0,(/nrow,ncol/), "float")
data2    = asciiread(fname1,(/nrow,ncol/), "float")
data3    = asciiread(fname2,(/nrow,ncol/), "float")
data4    = asciiread(fname3,(/nrow,ncol/), "float")
data5    = asciiread(fname4,(/nrow,20/), "float")

xtit = data4(:,1)     ; array for flight # as xtitles... not sure if this will work
diml = dimsizes(xtit)
dim  = dimsizes(xtit(0:81))

; make array to plot values against (SPECIFIED MANUALLY)
xtit2 = new((/diml/),"integer")
   do i = 0,diml-1
     xtit2(i) = i
   end do

;;;;;;;;;;;;;
; Make arrays/variables for GFDex data
;;;;;;;;;;;;;
f = new((/1/),"float")
fill = f@_FillValue
   
wnd10m_gfdex_all = new((/1,diml/),"float")
;   wnd10m_gfdex_all(0,:) = data5(:,4)    ; direct obs
   wnd10m_gfdex_all(0,:) = data5(:,5)    ; coare

Qsurf_gfdex = data5(:,6)

Q2m_gfdex_all = new((/1,diml/),"float")
;   Q2m_gfdex_all(0,:) = data5(:,7)      ; direct obs
   Q2m_gfdex_all(0,:) = data5(:,8)      ; coare

Tsurf_gfdex = data5(:,9)

T2m_gfdex_all = new((/1,diml/),"float")
;   T2m_gfdex_all(0,:) = data5(:,10)    ; direct obs
   T2m_gfdex_all(0,:) = data5(:,11)    ; coare

LHFlx_gfdex_all = new((/2,diml/),"float")
   ;LHFlx_gfdex_all(0,:) = data5(:,12)    ; direct obs
   LHFlx_gfdex_all(0,:) = data5(:,15)    ; coare
   LHFlx_gfdex_all(1,:) = data5(:,13)    ; bulk
   ;LHFlx_gfdex_all(1,:) = data5(:,14)    ; bulk_gfd

SHFlx_gfdex_all = new((/2,diml/),"float")
   ;SHFlx_gfdex_all(0,:) = data5(:,16)    ; direct obs
   SHFlx_gfdex_all(0,:) = data5(:,19)    ; coare
   SHFlx_gfdex_all(1,:) = data5(:,17)    ; bulk
   ;SHFlx_gfdex_all(1,:) = data5(:,18)    ; bulk_gfd

;;;;;;;;;;;;;
; Make WRF variable arrays - arrangement = (L->R) 100km, 50km, 25km, 10km)
;;;;;;;;;;;;;
wnd10m_all = new((/en_num+1,diml/),"float")
   wnd10m_all(0,:) = data1(:,4)
   wnd10m_all(1,:) = data2(:,4)
   wnd10m_all(2,:) = data3(:,4)
   wnd10m_all(3,:) = data4(:,4)
   wnd10m_all(4,:) = data5(:,5)   ; GFDEX coare
   wnd10m_all@long_name = "10 m Wind Speed"
   wnd10m_all@units = "m s-1"

Qsurf_all = new((/en_num+1,diml/),"float")
   Qsurf_all(0,:) = data1(:,5)
   Qsurf_all(1,:) = data2(:,5)
   Qsurf_all(2,:) = data3(:,5)
   Qsurf_all(3,:) = data4(:,5)
   Qsurf_all(4,:) = data5(:,6)   ; GFDex
   Qsurf_all@long_name =  "Saturation Mixing Ratio at Surface"
   Qsurf_all@units = "g kg-1"

Q2m_all = new((/en_num+1,diml/),"float")
   Q2m_all(0,:) = data1(:,6)
   Q2m_all(1,:) = data2(:,6)
   Q2m_all(2,:) = data3(:,6)
   Q2m_all(3,:) = data4(:,6)
   Q2m_all(4,:) = data5(:,8)    ; GFDex coare
   Q2m_all@long_name = "Mixing Ratio at 2m"
   Q2m_all@units = "g kg-1"

Qgrad_all = Q2m_all - Qsurf_all

Tsurf_all = new((/en_num+1,diml/),"float")
   Tsurf_all(0,:) = data1(:,7)
   Tsurf_all(1,:) = data2(:,7)
   Tsurf_all(2,:) = data3(:,7)
   Tsurf_all(3,:) = data4(:,7)
   Tsurf_all(4,:) = data5(:,9)    ; GFDex
   Tsurf_all@long_name = "Sea Surface Temperature"
   Tsurf_all@units = "K"

T2m_all = new((/en_num+1,diml/),"float")
   T2m_all(0,:) = data1(:,8)
   T2m_all(1,:) = data2(:,8)
   T2m_all(2,:) = data3(:,8)
   T2m_all(3,:) = data4(:,8)
   T2m_all(4,:) = data5(:,11)    ; GFDex coare
   T2m_all@long_name = "Temperature at 2m"
   T2m_all@units = "K"

Tgrad_all = T2m_all - Tsurf_all

LHFlx_all = new((/en_num+2,diml/),"float")
   LHFlx_all(0,:) = data1(:,9)
   LHFlx_all(1,:) = data2(:,9)
   LHFlx_all(2,:) = data3(:,9)
   LHFlx_all(3,:) = data4(:,9)
   LHFlx_all(4,:) = data5(:,15)  ; GFDex coare
   LHFlx_all(5,:) = data5(:,13)  ; GFDex bulk
   LHFlx_all@long_name = "Latent Heat Flux at Surface"
   LHFlx_all@units = "W m-2"

SHFlx_all = new((/en_num+2,diml/),"float")
   SHFlx_all(0,:) = data1(:,10)
   SHFlx_all(1,:) = data2(:,10)
   SHFlx_all(2,:) = data3(:,10)
   SHFlx_all(3,:) = data4(:,10)
   SHFlx_all(4,:) = data5(:,19)  ; GFDex coare
   SHFlx_all(5,:) = data5(:,17)  ; GFDex bulk
   SHFlx_all@long_name = "Sensible Heat Flux at Surface"
   SHFlx_all@units = "W m-2"

;;;;;;;;;;;;;
; Make bias arrays (WRF-GFDex)
;;;;;;;;;;;;;

Qsurf_bias = new((/en_num,diml/),"float")
   Qsurf_bias(0,:) = Qsurf_all(0,:)-Qsurf_all(4,:)
   Qsurf_bias(1,:) = Qsurf_all(1,:)-Qsurf_all(4,:)
   Qsurf_bias(2,:) = Qsurf_all(2,:)-Qsurf_all(4,:)
   Qsurf_bias(3,:) = Qsurf_all(3,:)-Qsurf_all(4,:)

Q2m_bias = new((/en_num,diml/),"float")
   Q2m_bias(0,:) = Q2m_all(0,:)-Q2m_all(4,:)
   Q2m_bias(1,:) = Q2m_all(1,:)-Q2m_all(4,:)
   Q2m_bias(2,:) = Q2m_all(2,:)-Q2m_all(4,:)
   Q2m_bias(3,:) = Q2m_all(3,:)-Q2m_all(4,:)

Qgrad_bias = new((/en_num,diml/),"float")
   Qgrad_bias(0,:) = Qgrad_all(0,:)-Qgrad_all(4,:)
   Qgrad_bias(1,:) = Qgrad_all(1,:)-Qgrad_all(4,:)
   Qgrad_bias(2,:) = Qgrad_all(2,:)-Qgrad_all(4,:)
   Qgrad_bias(3,:) = Qgrad_all(3,:)-Qgrad_all(4,:)

Tsurf_bias = new((/en_num,diml/),"float")
   Tsurf_bias(0,:) = Tsurf_all(0,:)-Tsurf_all(4,:)
   Tsurf_bias(1,:) = Tsurf_all(1,:)-Tsurf_all(4,:)
   Tsurf_bias(2,:) = Tsurf_all(2,:)-Tsurf_all(4,:)
   Tsurf_bias(3,:) = Tsurf_all(3,:)-Tsurf_all(4,:)

T2m_bias = new((/en_num,diml/),"float")
   T2m_bias(0,:) = T2m_all(0,:)-T2m_all(4,:)
   T2m_bias(1,:) = T2m_all(1,:)-T2m_all(4,:)
   T2m_bias(2,:) = T2m_all(2,:)-T2m_all(4,:)
   T2m_bias(3,:) = T2m_all(3,:)-T2m_all(4,:)

Tgrad_bias = new((/en_num,diml/),"float")
   Tgrad_bias(0,:) = Tgrad_all(0,:)-Tgrad_all(4,:)
   Tgrad_bias(1,:) = Tgrad_all(1,:)-Tgrad_all(4,:)
   Tgrad_bias(2,:) = Tgrad_all(2,:)-Tgrad_all(4,:)
   Tgrad_bias(3,:) = Tgrad_all(3,:)-Tgrad_all(4,:)

W10m_bias = new((/en_num,diml/),"float")
   W10m_bias(0,:) = wnd10m_all(0,:)-wnd10m_all(4,:)
   W10m_bias(1,:) = wnd10m_all(1,:)-wnd10m_all(4,:)
   W10m_bias(2,:) = wnd10m_all(2,:)-wnd10m_all(4,:)
   W10m_bias(3,:) = wnd10m_all(3,:)-wnd10m_all(4,:)

SHFlx_bias = new((/en_num,diml/),"float")  ; bias with coare
   SHFlx_bias(0,:) = SHFlx_all(0,:)-SHFlx_all(4,:)
   SHFlx_bias(1,:) = SHFlx_all(1,:)-SHFlx_all(4,:)
   SHFlx_bias(2,:) = SHFlx_all(2,:)-SHFlx_all(4,:)
   SHFlx_bias(3,:) = SHFlx_all(3,:)-SHFlx_all(4,:) 

LHFlx_bias = new((/en_num,diml/),"float")  ; bias with coare
   LHFlx_bias(0,:) = LHFlx_all(0,:)-LHFlx_all(4,:)
   LHFlx_bias(1,:) = LHFlx_all(1,:)-LHFlx_all(4,:)
   LHFlx_bias(2,:) = LHFlx_all(2,:)-LHFlx_all(4,:)
   LHFlx_bias(3,:) = LHFlx_all(3,:)-LHFlx_all(4,:) 

;;;;;;;;;;;;;
; Make RMSE arrays at each pt 
;;;;;;;;;;;;;
; RMSE = sqrt(sum(bias^2)/2)
; At 1 pt: RMSE = sqrt(bias^2)--> RMSE= ABS(bias)

Qsurf_rmse = abs(Qsurf_bias)
Q2m_rmse = abs(Q2m_bias)
Qgrad_rmse = abs(Qgrad_bias)

Tsurf_rmse = abs(Tsurf_bias)
T2m_rmse = abs(T2m_bias)
Tgrad_rmse = abs(Tgrad_bias)

W10m_rmse = abs(W10m_bias)
SHFlx_rmse = abs(SHFlx_bias)
LHFlx_rmse = abs(LHFlx_bias)

;;;;;;;;;;;;;
; Calculate and print RMSE and significance
;;;;;;;;;;;;;
  titles = (/"WRF100","WRF50","WRF25","WRF10"/)

  do i = 0,en_num-1
    ;Qsurf
    sum_sq_bias = sum(Qsurf_bias(i,:)^2)
    RMSE = sqrt(sum_sq_bias/diml)
    CORR = escorc(ndtooned(Qsurf_all(i,:)),ndtooned(Qsurf_all(4,:)))
    print(titles(i)+" Qsurf: RMSE "+RMSE)
    print(titles(i)+" Qsurf: CORR "+CORR)

    delete(sum_sq_bias)
    delete(RMSE)
    delete(CORR)

    ;Q2m
    sum_sq_bias = sum(Q2m_bias(i,:)^2)
    RMSE = sqrt(sum_sq_bias/diml)
    CORR = escorc(ndtooned(Q2m_all(i,:)),ndtooned(Q2m_all(4,:)))
    print(titles(i)+" Q2m: RMSE "+RMSE)
    print(titles(i)+" Q2m: CORR "+CORR)

    delete(sum_sq_bias)
    delete(RMSE)
    delete(CORR)

    ;Qgrad
    sum_sq_bias = sum(Qgrad_bias(i,:)^2)
    RMSE = sqrt(sum_sq_bias/diml)
    CORR = escorc(ndtooned(Qgrad_all(i,:)),ndtooned(Qgrad_all(4,:)))
    print(titles(i)+" Qgrad: RMSE "+RMSE)
    print(titles(i)+" Qgrad: CORR "+CORR)

    delete(sum_sq_bias)
    delete(RMSE)
    delete(CORR)

    ;Tsurf
    sum_sq_bias = sum(Tsurf_bias(i,:)^2)
    RMSE = sqrt(sum_sq_bias/diml)
    CORR = escorc(ndtooned(Tsurf_all(i,:)),ndtooned(Tsurf_all(4,:)))
    print(titles(i)+" Tsurf: RMSE "+RMSE)
    print(titles(i)+" Tsurf: CORR "+CORR)

    delete(sum_sq_bias)
    delete(RMSE)
    delete(CORR)

    ;T2m
    sum_sq_bias = sum(T2m_bias(i,:)^2)
    RMSE = sqrt(sum_sq_bias/diml)
    CORR = escorc(ndtooned(T2m_all(i,:)),ndtooned(T2m_all(4,:)))
    print(titles(i)+" T2m: RMSE "+RMSE)
    print(titles(i)+" T2m: CORR "+CORR)

    delete(sum_sq_bias)
    delete(RMSE)
    delete(CORR)

    ;Tgrad
    sum_sq_bias = sum(Tgrad_bias(i,:)^2)
    RMSE = sqrt(sum_sq_bias/diml)
    CORR = escorc(ndtooned(Tgrad_all(i,:)),ndtooned(Tgrad_all(4,:)))
    print(titles(i)+" Tgrad: RMSE "+RMSE)
    print(titles(i)+" Tgrad: CORR "+CORR)

    delete(sum_sq_bias)
    delete(RMSE)
    delete(CORR)

    ;10m wind
    sum_sq_bias = sum(W10m_bias(i,:)^2)
    RMSE = sqrt(sum_sq_bias/diml)
    CORR = escorc(ndtooned(wnd10m_all(i,:)),ndtooned(wnd10m_all(4,:)))
    print(titles(i)+" 10m wind: RMSE "+RMSE)
    print(titles(i)+" 10m wind: CORR "+CORR)

    delete(sum_sq_bias)
    delete(RMSE)
    delete(CORR)

    ;LHFlx
    sum_sq_bias = sum(LHFlx_bias(i,:)^2)
    RMSE = sqrt(sum_sq_bias/diml)
    CORR = escorc(ndtooned(LHFlx_all(i,:)),ndtooned(LHFlx_all(4,:)))
    print(titles(i)+" LHFlx: RMSE "+RMSE)
    print(titles(i)+" LHFlx: CORR "+CORR)

    delete(sum_sq_bias)
    delete(RMSE)
    delete(CORR)

    ;SHFlx
    sum_sq_bias = sum(SHFlx_bias(i,:)^2)
    RMSE = sqrt(sum_sq_bias/diml)
    CORR = escorc(ndtooned(SHFlx_all(i,:)),ndtooned(SHFlx_all(4,:)))
    print(titles(i)+" SHFlx: RMSE "+RMSE)
    print(titles(i)+" SHFlx: CORR "+CORR)

    delete(sum_sq_bias)
    delete(RMSE)
    delete(CORR)

end do

print ("Plotting surface data")
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  
; Plot data from each resolution
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;
; Set Resources
;;;;;;;;;;;;;
  
  wks = gsn_open_wks("ps",fout)
 
  plot = new(9, graphic)

; set resources used for all plots
  res                             = True              ; plot mods desired
  res@gsnFrame                    = False             ; Do not draw plot 
  res@gsnDraw                     = False             ; Do not advance frame
  res@gsnMaximize                 = True              ; maximize plot

; set title resources
  res@tiMainOn                    = True              ; turn on main title for each plot
  res@tiMainFontHeightF           = 0.03              ; set size of font for main plot

; set x axis tick marks
  res@tmXTOn                      = False             ; delete top and right ticks
  res@tmYROn                      = False
  res@trXMinF                     = min(xtit2)         ; set lower x limit
  res@trXMaxF                     = max(xtit2)         ; set upper x limit

  ;res@tmYLMode                    = "Manual"
  res@tmXBMode                    = "Explicit"
  res@tmXBValues                  = (/1, 20/)
  res@tmXBLabels                  = (/"2MAR", "5MAR"/)
  ;res@tmXBLabels                  = (/"B274", "B276", "B277", "B278"/)

  res@tiXAxisFontHeightF          = 0.03            ; set font size for x axis
  res@tmXBLabelFontHeightF        = 0.03             ; set tick mark label size for x axis
  res@tiYAxisFontHeightF          = 0.03             ; set font size for y axis
  res@tmYLLabelFontHeightF        = 0.03             ; set tick mark label size for y axis
  ;res@vpHeightF                   = 0.2               ; change aspect ratio of plot (viewport)
  ;res@vpWidthF                    = 0.9               
  
; arrays for different colors, etc.(requires a single array of data)
   res@xyMarkLineModes             = (/"Lines", "Lines", "Lines", "Lines", "Markers", "Markers"/)
   res@xyMarkers                   = (/ -1, -1, -1, -1, 1, 4 /)
   res@xyMarkerSizes               = (/0.02,0.02,0.02,0.04,0.04/)
   res@xyLineColors                = (/ "orange", "red", "green", "blue","black", "black"/)
   res@xyMarkerColors              = (/ "black", "red", "green", "blue","black", "black"/)
   res@xyMonoLineColor             =  False                 ; allow other line colors
   res@xyDashPatterns              = (/0, 0, 0, 0, 0, 0/)
   res@xyLineThicknesses           = (/2.0, 2.0, 2.0, 2.0, 2.0/) ;set for 1.5 or 2.0
   ;res@gsnYRefLine                 = 0.0           ; create a reference line
   ;res@gsnYRefLineColor            = "grey"

; legend resources for all the plots
  lgres                    = True

  lgres@pmLegendWidthF     = 0.03
  lgres@pmLegendHeightF    = 0.01
;  lgres@vpWidthF           = 0.30               ; width of legend (NDC)
;  lgres@vpHeightF          = 0.15               ; height of legend (NDC)
  lgres@lgLabelFontHeightF = 0.02
  lgres@lgAutoManage       = False              ; false allows me to set the legend directly
  
  lgres@lgOrientation      = "horizontal" 
  lgres@lgMonoLineColor    = False
  lgres@lgMonoItemType     = False
  lgres@lgItemTypes        = res@xyMarkLineModes
  lgres@lgDashIndexes      = res@xyDashPatterns
  lgres@lgMarkerIndexes    = res@xyMarkers
  lgres@lgLineColors       = res@xyLineColors   ; make the colors for the legend
  lgres@lgMarkerColors     = res@xyMarkerColors
  xpos = 0.35   ; xposition 
  ypos = 0.12  ; yposition (below figures)

;;;;;;;;;;;;;
; Plot 0 - Sfc Mixing ratio
;;;;;;;;;;;;;
title = "a)  Surface Mixing Ratio"

  opts                            = res           ; set resources for plot 1 to be same as specified above
  opts@tiMainString               = title         ; set title for plot. designated above as both input names
  ;opts@tiYAxisString              = Qsurf_rmse@units
  
  cplot0 = gsn_csm_xy(wks, xtit2, Qsurf_rmse, opts) 
  plot(0) = cplot0                              ; make panel section of this plot
  delete(opts)
  delete(title)

;;;;;;;;;;;;;
; Plot 1 - 2m Mixing ratio
;;;;;;;;;;;;;
title = "b)  2m Mixing Ratio"

  opts                            = res           ; set resources for plot 1 to be same as specified above
  opts@tiMainString               = title         ; set title for plot. designated above as both input names
;  opts@tiYAxisString              = Q2m_rmse@units
  
  cplot1 = gsn_csm_xy(wks, xtit2, Q2m_rmse, opts) 
  plot(1) = cplot1                              ; make panel section of this plot
  delete(opts)
  delete(title)

;;;;;;;;;;;;;
; Plot 2 - Mixing ratio gradient
;;;;;;;;;;;;;
title = "c)  Mixing Ratio Gradient"

  opts                            = res           ; set resources for plot 1 to be same as specified above
  opts@tiMainString               = title         ; set title for plot. designated above as both input names
;  opts@tiYAxisString              = Qgrad_rmse@units
  
  cplot2 = gsn_csm_xy(wks, xtit2, Qgrad_rmse, opts) 
  plot(2) = cplot2                              ; make panel section of this plot
  delete(opts)
  delete(title)

;;;;;;;;;;;;;
; Plot 3 - Sfc Temperature
;;;;;;;;;;;;;
title = "d)  Surface Temperature"

  opts                            = res           ; set resources for plot 1 to be same as specified above
  opts@tiMainString               = title         ; set title for plot. designated above as both input names
;  opts@tiYAxisString              = Tsurf_rmse@units
  
  cplot3 = gsn_csm_xy(wks, xtit2, Tsurf_rmse, opts) 
  plot(3) = cplot3                              ; make panel section of this plot
  delete(opts)
  delete(title)

;;;;;;;;;;;;;
; Plot 4 - 2m Temperature
;;;;;;;;;;;;;
title = "e)  2m Temperature"

  opts                            = res           ; set resources for plot 1 to be same as specified above
  opts@tiMainString               = title         ; set title for plot. designated above as both input names
;  opts@tiYAxisString              = T2m_rmse@units
  
  cplot4 = gsn_csm_xy(wks, xtit2, T2m_rmse, opts) 
  plot(4) = cplot4                              ; make panel section of this plot
  delete(opts)
  delete(title)

;;;;;;;;;;;;;
; Plot 5 - Temperature gradient
;;;;;;;;;;;;;
title = "f)  Temperature Gradient"

  opts                            = res           ; set resources for plot 1 to be same as specified above
  opts@tiMainString               = title         ; set title for plot. designated above as both input names
;  opts@tiYAxisString              = Tgrad_rmse@units
  
  cplot5 = gsn_csm_xy(wks, xtit2, Tgrad_rmse, opts) 
  plot(5) = cplot5                              ; make panel section of this plot
  delete(opts)
  delete(title)

;;;;;;;;;;;;;
; Plot 6 - 10m Wind
;;;;;;;;;;;;;
title = "g)  10m wind speed"

  opts                            = res           ; set resources for plot 1 to be same as specified above
  opts@tiMainString               = title         ; set title for plot. designated above as both input names
;  opts@tiYAxisString              = W10m_rmse@units
  
  cplot6 = gsn_csm_xy(wks, xtit2, W10m_rmse, opts) 
  plot(6) = cplot6                              ; make panel section of this plot
  delete(opts)
  delete(title)

;;;;;;;;;;;;;
; Plot 7 - LHFlux at Surface
;;;;;;;;;;;;;
title = "h)  Latent Heat Flux"

  opts                            = res           ; set resources for plot 1 to be same as specified above
  opts@tiMainString               = title         ; set title for plot. designated above as both input names
;  opts@tiYAxisString              = LHFlx_rmse@units
  
  cplot7 = gsn_csm_xy(wks, xtit2, LHFlx_rmse, opts) 
  plot(7) = cplot7                              ; make panel section of this plot
  delete(opts)
  delete(title)

;;;;;;;;;;;;;
; Plot 8 - LHFlux at Surface
;;;;;;;;;;;;;
title = "i)  Sensible Heat Flux"

  opts                            = res           ; set resources for plot 1 to be same as specified above
  opts@tiMainString               = title         ; set title for plot. designated above as both input names
;  opts@tiYAxisString              = SHFlx_rmse@units
  
  cplot8 = gsn_csm_xy(wks, xtit2, SHFlx_rmse, opts) 
  plot(8) = cplot8                              ; make panel section of this plot
  delete(opts)
  delete(title)

 ;;;;;;;;;;;;;
; Plot final - panel plot set 
;;;;;;;;;;;;; 
  ;titlefin = "Surface variables"

  pnlres                            = True
  pnlres@gsnMaximize                = True
  pnlres@gsnFrame                   = False
  ;pnlres@txString                   = titlefin           ; set title for whole panel plot. specified above     
  ;pnlres@txFontHeightF              = 0.013
  pnlres@gsnPaperOrientation        = "landscape"      ; landscape mode
  pnlres@gsnPanelYWhiteSpacePercent = 2                ; Add white space b/w plots.
  pnlres@gsnPanelXWhiteSpacePercent = 2                ; Add white space b/w plots.
  pnlres@gsnPanelScalePlotIndex     = 1
  pnlres@gsnPanelBottom             = 0.13             ; leave room for legend at bottom
  pnlres@gsnMaximize                = True	       ; fill the page
  gsn_panel(wks,(/plot/),(/3,3/),pnlres)               ; create final panel plot

;  ; make general legend
;  gsn_legend_ndc(wks,en_num + 2,(/title1, title2, title3, title4, title5 + " COARE3.0", title5 + " Bulk(Smith)"/),xpos ,ypos ,lgres) 

; ; make general legend
;  pnllgres                    = True
;  pnllgres@vpWidthF           = 0.15               ; width of legend (NDC)
;  pnllgres@vpHeightF          = 0.15               ; height of legend (NDC)
;  pnllgres@lbBoxMajorExtentF  = 0.1              ; space between labels
;  pnllgres@lbMonoFillPattern  = True              ; solid fill
;  pnllgres@lbLabelJust        = "CenterLeft"      ; justify font
;  pnllgres@lbPerimOn          = False

;  labels = (/title1, title2, title3, title4, title5/)
;  xpos = (/0.0, 0.2, 0.4, 0.6, 0.8/)
;  colors = (/ "black", "red", "green", "blue", "black"/)

;  ; create legend
;  do i = 0,en_num
;    pnllgres@lbFillColors = colors(i)
;    gsn_labelbar_ndc(wks, 1, labels(i), xpos(i), 0.1, pnllgres)
;  end do

frame(wks)
  
print("Plots Completed")

;;;;;;;;;;;;;
; Post Processing stuff 
;;;;;;;;;;;;;
 convert_cmd = "convert -density 300 "+fout+".ps -rotate -90 -trim -bordercolor white -border 10 -colors 256 -depth 8 "+fout+".png"

  system(convert_cmd)


end





